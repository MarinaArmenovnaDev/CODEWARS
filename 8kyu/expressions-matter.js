// ❓Даны три целых числа a, b, и c, вернуть наибольшее число, полученное после вставки операторов +, *, и скобок (). Другими словами, попробовать каждую комбинацию a, b, и cс операторами, не переупорядочивая операнды, и вернуть максимальное значение.

// Пример
// Вот несколько возможных выражений с числами 1, 2 и 3:

// 1 * (2 + 3) = 5
// 1 * 2 * 3 = 6
// 1 + 2 * 3 = 7
// (1 + 2) * 3 = 9
// Максимальное значение, которое можно получить, — 9.

// Примечания
// Числа всегда положительные и находятся в диапазоне 1 ≤ a, b, c ≤ 10.
// Одну и ту же операцию можно использовать несколько раз.
// Нет необходимости использовать все операторы и скобки.
// Вы не можете поменять операнды местами. Например, с данными числами вы не можете получить выражение (1 + 3) * 2 = 8.
// Примеры ввода и вывода
// expressionsMatter(1, 2, 3) ==> 9, потому что (1 + 2) * 3 = 9.
// expressionsMatter(1, 1, 1) ==> 3, потому что 1 + 1 + 1 = 3.
// expressionsMatter(9, 1, 1) ==> 18, потому что 9 * (1 + 1) = 18.

// ✅ SOLUTION:
function expressionMatter(a, b, c) {
    let result = 0
    if(a * (b + c) > result){
        result = a * (b + c)
    if(a * b * c > result) {
        result = a * b * c 
    }
    if(a + b * c > result){
        result = a + b * c
    }
    if((a + b) * c > result){
        result = (a + b) * c 
    }
    if((a + b + c) > result){
        result = a + b + c
    }
  }
  return result
}

  console.log(expressionMatter (9, 1, 1));