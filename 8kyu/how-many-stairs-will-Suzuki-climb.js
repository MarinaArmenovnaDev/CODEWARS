// ❓ Судзуки — монах, который поднимается по большой лестнице в монастырь в рамках ритуала. В некоторые дни он поднимается на большее количество ступенек, чем в другие, в зависимости от количества учеников, которых он должен тренировать утром. Ему интересно, сколько ступенек он сможет преодолеть за следующие 20 лет, и он провел год, отмечая свой ежедневный прогресс.

// Сумма всех ступенек, пройденных за год, будет использована для оценки числа ступенек, по которым он может подняться за 20 лет.

// 20_годовая_оценка = один_год_всего * 20

// Вы получите следующую структуру данных, представляющую лестницы, которые Suzuki зарегистрировала за год. У вас будут все данные за весь год, поэтому независимо от того, как они были зарегистрированы, решить проблему будет просто.

// stairs = [sunday,monday,tuesday,wednesday,thursday,friday,saturday]
// Убедитесь, что ваше решение учитывает все вложения в лестничном массиве.

// Каждый будний день в массиве лестницы — это массив.

// sunday = [6737, 7244, 5776, 9826, 7057, 9247, 5842, 5484, 6543, 5153, 6832, 8274, 7148, 6152, 5940, 8040, 9174, 7555, 7682, 5252, 8793, 8837, 7320, 8478, 6063, 5751, 9716, 5085, 7315, 7859, 6628, 5425, 6331, 7097, 6249, 8381, 5936, 8496, 6934, 8347, 7036, 6421, 6510, 5821, 8602, 5312, 7836, 8032, 9871, 5990, 6309, 7825]
// Ваша функция должна возвращать 20-летнюю оценку количества пройденных ступенек, используя приведенную выше формулу.

// ✅ SOLUTION:
function stairsIn20(s){
   const flatArr = s.flat()
  const year =  flatArr.reduce((acc, num) => acc + num, 0)
  return year * 20
  }

console.log(stairsIn20([[1,2,3],[1,2,3],[1,2,3],[1,2,3],[1,2,3],[1,2,3],[1,2,3]]));