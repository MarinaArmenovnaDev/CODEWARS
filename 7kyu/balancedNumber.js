// ❓Сбалансированное число — это число, у которого сумма цифр слева от средней цифры (цифр) и сумма цифр справа от средней цифры (цифр) равны.

// Если число имеет нечетное количество цифр, то есть только одна средняя цифра. (Например, 92645имеет одну среднюю цифру, 6.) В противном случае есть две средние цифры. (Например, средние цифры 1301числа 3и 0.)

// Среднюю цифру(ы) не следует учитывать при определении того, является ли число сбалансированным или нет, например, 413023является ли число сбалансированным, поскольку и левая, и правая сумма равны 5.

// Задача
// Дано число, определить, сбалансировано ли оно, и вернуть строку "Balanced"или "Not Balanced"соответственно. Переданное число всегда будет положительным.

// Примеры
// 7 ==> return "Balanced"
// Объяснение:
// средняя цифра(ы): 7
// сумма всех цифр слева от средней цифры(цифр) -> 0
// сумма всех цифр справа от средней цифры(цифр) -> 0
// 0 и 0 равны, поэтому они сбалансированы.
// 295591 ==> return "Not Balanced"
// Объяснение:
// средняя цифра(ы): 55
// сумма всех цифр слева от средней цифры(цифр) -> 11
// сумма всех цифр справа от средней цифры(цифр) -> 10
// 11 и 10 не равны, поэтому они не сбалансированы.
// 959 ==> return "Balanced"
// Объяснение:
// средняя цифра(ы): 5
// сумма всех цифр слева от средней цифры(цифр) -> 9
// сумма всех цифр справа от средней цифры(цифр) -> 9
// 9 и 9 равны, поэтому они сбалансированы.
// 27102983 ==> return "Not Balanced"
// Объяснение:
// средняя цифра(ы): 02
// сумма всех цифр слева от средней цифры(цифр) -> 10
// сумма всех цифр справа от средней цифры(цифр) -> 20
// 10 и 20 не равны, поэтому они не сбалансированы.


// ✅ SOLUTION:

function balancedNum(number) {
    const numStr = number.toString();
    const len = numStr.length;

    // Крайние случаи:
    if (len === 1) return "Balanced";
    if (len === 2) return "Balanced"; // Любое двузначное число сбалансировано (суммы слева и справа = 0)

    let leftSum, rightSum;
    const middlePos = Math.floor(len / 2);

    if (len % 2 === 1) { // Нечётная длина (одна средняя цифра)
        leftSum = numStr.slice(0, middlePos).split('').reduce((sum, digit) => sum + Number(digit), 0);
        rightSum = numStr.slice(middlePos + 1).split('').reduce((sum, digit) => sum + Number(digit), 0);
    } else { // Чётная длина (две средние цифры)
        leftSum = numStr.slice(0, middlePos - 1).split('').reduce((sum, digit) => sum + Number(digit), 0);
        rightSum = numStr.slice(middlePos + 1).split('').reduce((sum, digit) => sum + Number(digit), 0);
    }

    return leftSum === rightSum ? "Balanced" : "Not Balanced";
}

console.log(balancedNum(238161));
