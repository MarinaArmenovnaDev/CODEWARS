// ❓ Подсчитайте количество делителей положительного целого числа n.

// Случайные тесты достигают n = 500000, а фиксированные тесты — выше.

// Примеры (вход --> выход)
// 4 --> 3 // we have 3 divisors - 1, 2 and 4
// 5 --> 2 // we have 2 divisors - 1 and 5
// 12 --> 6 // we have 6 divisors - 1, 2, 3, 4, 6 and 12
// 30 --> 8 // we have 8 divisors - 1, 2, 3, 5, 6, 10, 15 and 30
// Обратите внимание, что вы должны вернуть только число, количество делителей. Числа в скобках показаны только для того, чтобы вы могли видеть, какие числа учитываются в каждом случае.



// ✅ SOLUTION:

// function getDivisorsCnt(n){
//   let res = []
//   let count = 0
//   for (let i = 1 ; i<= n ; i ++) {
//     if(n % i === 0){
//         res.push(i)
//         count +=1
//     }
   
//   }
//   return count
// }

function getDivisorsCnt(n) {
  let count = 0;
  for (let i = 1; i <= Math.sqrt(n); i++) {
    if (n % i === 0) {
      // Если i и n/i различны, учитываем оба делителя
      if (i === n / i) {
        count += 1;
      } else {
        count += 2;
      }
    }
  }
  return count;
}

//Цикл до квадратного корня из n:
// Мы проходим только до Math.sqrt(n), так как делители числа n всегда идут парами. Например, для n = 12:
// Пары делителей: (1, 12), (2, 6), (3, 4).
// После i = 3 (квадратный корень из 12 ≈ 3.46) мы уже не находим новых уникальных делителей.
// Учет делителей:
// Если i является делителем n, то n / i также является делителем.
// Если i и n / i равны (например, для n = 16, i = 4), то это один и тот же делитель, и мы учитываем его только один раз.

console.log(getDivisorsCnt(4));
